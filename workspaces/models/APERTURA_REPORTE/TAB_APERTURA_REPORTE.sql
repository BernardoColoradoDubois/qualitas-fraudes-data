CREATE OR REPLACE TABLE `qlts-dev-mx-au-bro-verificacio.DM_PREVENCION_FRAUDES.DM_APERTURA_REPORTE` AS
SELECT 
  -- Campos numéricos enteros
  SAFE_CAST(CLAVE AS INT64) AS CLAVE,
  AJUSTADOR,
  SAFE_CAST(REPORTE AS INT64) AS REPORTE,
  SAFE_CAST(SINIESTRO AS INT64) AS SINIESTRO,
  SAFE_CAST(POLIZA AS INT64) AS POLIZA,
  
  -- Campos de texto
  NOM_ASEGURADO,
  COLONIA,
  SAFE_CAST(NULLIF(DELEGACION, '') AS FLOAT64) AS DELEGACION,
  ENTIDAD,
  
  -- Campos de fecha y hora - Formato: DDMMMYYYY:HH:MM:SS.sss
  CASE 
    WHEN FEC_HORA_REP IS NOT NULL AND FEC_HORA_REP != '' 
    THEN PARSE_DATETIME('%d%b%Y:%H:%M:%S', REGEXP_REPLACE(FEC_HORA_REP, r'\..*$', ''))
    ELSE NULL 
  END AS FEC_HORA_REP,
  
  CASE 
    WHEN FEC_HORA_PAS IS NOT NULL AND FEC_HORA_PAS != '' 
    THEN PARSE_DATETIME('%d%b%Y:%H:%M:%S', REGEXP_REPLACE(FEC_HORA_PAS, r'\..*$', ''))
    ELSE NULL 
  END AS FEC_HORA_PAS,
  
  -- Campos de diferencia de tiempo (mantener como STRING)
  DIF_1,
  
  CASE 
    WHEN FEC_HORA_LLEG IS NOT NULL AND FEC_HORA_LLEG != '' 
    THEN PARSE_DATETIME('%d%b%Y:%H:%M:%S', REGEXP_REPLACE(FEC_HORA_LLEG, r'\..*$', ''))
    ELSE NULL 
  END AS FEC_HORA_LLEG,
  
  DIF_2,
  
  CASE 
    WHEN FEC_HORA_TER IS NOT NULL AND FEC_HORA_TER != '' 
    THEN PARSE_DATETIME('%d%b%Y:%H:%M:%S', REGEXP_REPLACE(FEC_HORA_TER, r'\..*$', ''))
    ELSE NULL 
  END AS FEC_HORA_TER,
  
  DIF_3,
  DIF_T,
  
  -- Campos numéricos que pueden ser nulos
  SAFE_CAST(NULLIF(CITA, '') AS FLOAT64) AS CITA,
  SAFE_CAST(OFICINA AS INT64) AS OFICINA,
  SAFE_CAST(NGER AS INT64) AS NGER,
  
  -- Campos de texto
  GERENTE,
  OBSERVACIONES,
  USR_MOD_OBS,
  CONDUCTOR,
  TIPO_VEH,
  
  -- Campos numéricos
  SAFE_CAST(MODL AS INT64) AS MODL,
  TELEFONO,
  SAFE_CAST(CVE_AGENTE AS INT64) AS CVE_AGENTE,
  NOM_AGENTE,
  SAFE_CAST(CVE_CAUSA AS INT64) AS CVE_CAUSA,
  CAUSA,
  CAB_ASIG_SIN,
  SAFE_CAST(INC AS INT64) AS INC,
  SERIE,
  PLACAS,
  
  -- Campos que pueden ser nulos
  SAFE_CAST(NULLIF(R_ESTAC, '') AS FLOAT64) AS R_ESTAC,
  SAFE_CAST(NULLIF(DESC_R_ESTAC, '') AS FLOAT64) AS DESC_R_ESTAC,
  
  -- Campos de texto
  USR_LLEG,
  USR_TERM,
  
  -- Campos numéricos
  SAFE_CAST(SUBRAMO AS INT64) AS SUBRAMO,
  UBIC_ACC,
  SAFE_CAST(OFIC_PREST AS INT64) AS OFIC_PREST,
  PER_QUIEN_REP,
  
  -- Campos que pueden ser nulos o tener valores decimales
  SAFE_CAST(NULLIF(NRO_ECON, '') AS FLOAT64) AS NRO_ECON,
  EMPLEADO,
  SAFE_CAST(NULLIF(MON_INDEM, '') AS FLOAT64) AS MON_INDEM,
  
  -- Campos de texto
  OBSERVACIONES2,
  UBICACION,
  ENTRE,
  ORIGEN,
  SERIE_POL,
  
  -- Campos que pueden ser nulos
  SAFE_CAST(NULLIF(COD_AJUST, '') AS INT64) AS COD_AJUST,
  SAFE_CAST(NULLIF(STATUS_INV_REP, '') AS FLOAT64) AS STATUS_INV_REP,
  SAFE_CAST(NULLIF(STATUS_INV_SIN, '') AS FLOAT64) AS STATUS_INV_SIN,
  
  -- Campos de texto
  ORGANISMO,
  SAFE_CAST(NULLIF(CVE_BENEF, '') AS INT64) AS CVE_BENEF,
  BENEFICIO,
  DESCRIPCION,
  OF_AJUST,
  PLACAS_CAB,
  DOBLE_DED,
  ABOGADO,
  
  -- Fecha de ocurrencia
  CASE 
    WHEN FEC_OCUR IS NOT NULL AND FEC_OCUR != '' 
    THEN PARSE_DATETIME('%d%b%Y:%H:%M:%S', REGEXP_REPLACE(FEC_OCUR, r'\..*$', ''))
    ELSE NULL 
  END AS FEC_OCUR,
  
  SAFE_CAST(NULLIF(CRISTAFACIL, '') AS FLOAT64) AS CRISTAFACIL,
  
  -- Fecha de batch con microsegundos
  CASE 
    WHEN BATCHDATE IS NOT NULL AND BATCHDATE != '' 
    THEN PARSE_DATETIME('%d%b%Y:%H:%M:%S', REGEXP_REPLACE(BATCHDATE, r'\..*$', ''))
    ELSE NULL 
  END AS BATCHDATE,
  
  SYSUSERID

FROM `qlts-dev-mx-au-bro-verificacio.LAN_VERIFICACIONES.APERTURA_REPORTE`

-- Opcional: Agregar WHERE para filtrar registros válidos
-- WHERE CLAVE IS NOT NULL AND CLAVE != ''