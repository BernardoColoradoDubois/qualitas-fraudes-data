-- ======================================================================
-- TRADUCCIÓN DE SAS A BIGQUERY - PROCESO TODAS LAS PIEZAS
-- ======================================================================

-- 1. Extracción de CAUSACAMBIOVALE
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_CAUSACAMBIOVALE` AS
SELECT 
    IDCAUSACAMBIOVALE,
    DESCRIPCION
FROM `LAN_VERIFICACIONES.CAUSACAMBIOVALE`;

-- 2. Extracción de COSTO con concepto igual a 'REF'
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_COSTO` AS
SELECT 
    IDCOSTO,
    LISTA,
    BLINDAJE,
    CLAVENAGS,
    MONTOCONVENIO
FROM `LAN_VERIFICACIONES.COSTO`
WHERE CONCEPTO = 'REF';

-- 3. Extracción de COMPLEMENTO con concepto igual a 'REF'
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_COMPLEMENTO` AS
SELECT 
    IDCOMPLEMENTO,
    LISTA,
    BLINDAJE,
    CLAVENAGS,
    MONTOCONVENIO
FROM `LAN_VERIFICACIONES.COMPLEMENTO`
WHERE CONCEPTO = 'REF';

-- 4. Extracción de VISTA_VALE
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_VISTA_VALE` AS
SELECT 
    IDEXPEDIENTE,
    IDVALE,
    CODPROVEEDOR,
    FOLIO,
    FECHAEXPEDICION,
    FECHAACTUALIZACION,
    AUTORIZADOR,
    IDVALEESTATUS
FROM `LAN_VERIFICACIONES.VISTA_VALE`;

-- 5. Extracción de VALEESTATUS
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_VALEESTATUS` AS
SELECT 
    IDVALEESTATUS,
    DESCRIPCION
FROM `LAN_VERIFICACIONES.VALEESTATUS`;

-- 6. Extracción de VALEHISTORICO y creación de LLAVEPIEZA
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_VALEHISTORICO` AS
SELECT 
    IDVALEHISTORICO,
    NUMPARTE,
    REFERENCIA,
    DESCRIPCION,
    MONTO,
    IDCOSTO,
    TIPO,
    FECENVIO,
    FECENTREGAREFACCIONARIA,
    FECRECEPCION,
    FECSURTIDO,
    USUARIO,
    IDREFACCION,
    IDCAUSACAMBIOVALE,
    IDVALE,
    -- LLAVEPIEZA usando CONCAT en lugar de CATT
    CONCAT(IFNULL(NUMPARTE,''), IFNULL(REFERENCIA,''), IFNULL(DESCRIPCION,'')) AS LLAVEPIEZA
FROM `LAN_VERIFICACIONES.VALEHISTORICO`;

-- 7. Extracción de RELACIONCDR_SICDR
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_RELACIONCDR_SICDR` AS
SELECT 
    CLAVETALLER,
    IDSICDR
FROM `LAN_VERIFICACIONES.RELACIONCDR_SICDR`;

-- 8. Extracción de SUPERVISORINTEGRAL
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_SUPERVISORINTEGRAL` AS
SELECT 
    CLAVESUPERVISOR,
    NOMBRESUPERVISOR,
    CAST(IDREGIONGEOGRAFICA AS INT64) AS IDREGIONGEOGRAFICA,
    IDSUPERVISORINTEGRAL
FROM `LAN_VERIFICACIONES.SUPERVISORINTEGRAL`;

-- 9. Extracción de DATOSGENERALES
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_DATOSGENERALES` AS
SELECT 
    CAST(IDEXPEDIENTE AS INT64) AS IDEXPEDIENTE,
    EJERCICIO,
    NUMREPORTE,
    NUMSINIESTRO,
    CLAVETALLER,
    CODVALUADOR,
    IDVALUACION
FROM `LAN_VERIFICACIONES.DATOSGENERALES`;

-- 10. Extracción de FECHAS
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_FECHAS` AS
SELECT 
    CAST(IDEXPEDIENTE AS INT64) AS IDEXPEDIENTE,
    FECVALUACION,
    FECTERMINADO,
    FECENTREGADO
FROM `LAN_VERIFICACIONES.FECHAS`;

-- 11. Extracción de VALUACION
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_VALUACION` AS
SELECT 
    IDVALUACION,
    DESCRIPCION
FROM `LAN_VERIFICACIONES.VALUACION`;

-- 12. Extracción de CERCO
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_CERCO` AS
SELECT 
    IDENTIDAD,
    NOMBRE
FROM `LAN_VERIFICACIONES.CERCO`
ORDER BY NOMBRE;

-- 13. Extracción de ESTADO
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_ESTADO` AS
SELECT 
    CAST(IDREGIONGEOGRAFICA AS INT64) AS IDREGIONGEOGRAFICA,
    IDESTADO
FROM `LAN_VERIFICACIONES.ESTADO`;

-- 14. Extracción de VALUADOR
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_VALUADOR` AS
SELECT 
    CODVALUADOR,
    IDCATEGORIA,
    EQUIPOPESADO
FROM `LAN_VERIFICACIONES.VALUADOR`;

-- 15. Extracción de CATEGORIA
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_CATEGORIA` AS
SELECT 
    NOMBRE,
    IDCATEGORIA
FROM `LAN_VERIFICACIONES.CATEGORIA`;

-- 16. Extracción de DATOSVEHICULO
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_DATOSVEHICULO` AS
SELECT 
    CAST(IDEXPEDIENTE AS INT64) AS IDEXPEDIENTE,
    TIPO,
    MODELO,
    SERIE,
    IDMARCA
FROM `LAN_VERIFICACIONES.DATOSVEHICULO`;

-- 17. Extracción de MARCA
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_MARCA` AS
SELECT 
    IDMARCA,
    DESCRIPCION
FROM `LAN_VERIFICACIONES.MARCA`;

-- 18. Extracción de ESTATUS
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_ESTATUS` AS
SELECT 
    CAST(IDEXPEDIENTE AS INT64) AS IDEXPEDIENTE,
    IDESTATUSEXPEDIENTE
FROM `LAN_VERIFICACIONES.ESTATUS`;

-- 19. Extracción de ESTATUSEXPEDIENTES
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_ESTATUSEXPEDIENTES` AS
SELECT 
    IDESTATUSEXPEDIENTE,
    DESCRIPCION
FROM `LAN_VERIFICACIONES.ESTATUSEXPEDIENTES`;

-- 20. Extracción de TALLERES
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_TALLERES` AS
SELECT 
    IDTALLER,
    IDOFICINA,
    CLAVETALLER,
    NOMBRECOMERCIAL,
    IDENTIDAD,
    TIPO AS TIPOCDR_PORTAL,
    COTIZADOR AS CDRCOTIZADOR,
    FRONTERIZO AS CDRAUTOSURTIDO,
    IDESTADO
FROM `LAN_VERIFICACIONES.TALLERES`;

-- 21. Extracción de PROVEEDOR
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_PROVEEDOR` AS
SELECT 
    CODPROVEEDOR,
    NOMBRE AS NOMBREPROVEEDOR,
    TIPO AS TIPOPROVEEDOR_PORTAL,
    IDTIPOTOT
FROM `LAN_VERIFICACIONES.PROVEEDOR`;

-- 22. Extracción de TIPOTOT
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DE_TIPOTOT` AS
SELECT 
    IDTIPOTOT,
    DESCRIPCION AS TIPOTOT
FROM `LAN_VERIFICACIONES.TIPOTOT`;

-- 23. Extracción de PRESTADORES
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.ID_PRESTADORES_MARCA` AS
SELECT 
    Id,
    Marca,
    Status,
    Tipo,
    POBCOMER
FROM `LAN_VERIFICACIONES.PRESTADORES`;

-- 24. Extracción de TESTADO_BSC
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.POB_COMER` AS
SELECT 
    Z_ID,
    EDOPOB
FROM `LAN_VERIFICACIONES.TESTADO_BSC`;

-- 25. Extracción de TIPOPROVEEDOR
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.ID_TIPOPROVEEDOR` AS
SELECT 
    id,
    tipo_proveedor
FROM `LAN_VERIFICACIONES.TIPOPROVEEDOR`;

-- 26. Procesamiento de ENVIOHISTORICO con fecha mínima
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.ENVIOHISTORICO_P` AS
SELECT 
    CAST(IDEXPEDIENTE AS INT64) AS IDEXPEDIENTE,
    MIN(FECHAAUTORIZACIONVALUADOR) AS MIN_FEC_AUTORIZACION
FROM `LAN_VERIFICACIONES.ENVIOHISTORICO`
WHERE IDEXPEDIENTE IS NOT NULL
GROUP BY IDEXPEDIENTE
HAVING MIN_FEC_AUTORIZACION >= '2019-01-01 00:00:00';

-- 27. Extracción de AUTORIZACIONES desde HISTORICOTERMINOENTREGA
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.AUTORIZACIONES` AS
SELECT 
    CAST(IDEXPEDIENTE AS INT64) AS IDEXPEDIENTE,
    TIPOFECHA,
    FECHA
FROM `LAN_VERIFICACIONES.HISTORICOTERMINOENTREGA`
WHERE TIPOFECHA LIKE '%AUTORIZA VAL%' OR TIPOFECHA LIKE '%AUTORIZACION VAL%';

-- 28. Fecha mínima de autorización
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.MIN_AUTORIZACION` AS
SELECT 
    IDEXPEDIENTE,
    MIN(FECHA) AS MIN_FEC_AUTORIZACION
FROM `STG_PREVENCION_FRAUDES.AUTORIZACIONES`
GROUP BY IDEXPEDIENTE
ORDER BY MIN_FEC_AUTORIZACION;

-- 29. Unión de fechas de autorización
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.MIN_FEC_AUTORIZACION` AS
SELECT * FROM `STG_PREVENCION_FRAUDES.ENVIOHISTORICO_P`
UNION ALL
SELECT * FROM `STG_PREVENCION_FRAUDES.MIN_AUTORIZACION`;

-- 30. Fecha mínima final de autorización
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO` AS
SELECT DISTINCT 
    IDEXPEDIENTE,
    MIN(MIN_FEC_AUTORIZACION) AS MIN_of_FECHAAUTORIZACIONVALUADOR
FROM `STG_PREVENCION_FRAUDES.MIN_FEC_AUTORIZACION`
WHERE IDEXPEDIENTE IS NOT NULL
GROUP BY IDEXPEDIENTE
HAVING MIN_of_FECHAAUTORIZACIONVALUADOR >= '2019-01-01 00:00:00'
ORDER BY MIN_of_FECHAAUTORIZACIONVALUADOR;

-- 31. Unión de prestadores con población comercial y tipo
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.PRESTADORES_POB_COMER_TIPO` AS
SELECT 
    t1.Id,
    t3.EDOPOB AS Pob_Comer,
    t1.Marca,
    t2.tipo_proveedor,
    t1.Status
FROM `STG_PREVENCION_FRAUDES.ID_PRESTADORES_MARCA` t1
INNER JOIN `STG_PREVENCION_FRAUDES.ID_TIPOPROVEEDOR` t2 ON t1.Tipo = t2.id
LEFT JOIN `STG_PREVENCION_FRAUDES.POB_COMER` t3 ON t1.POBCOMER = t3.Z_ID;

-- 32. Query para proveedor consolidado
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.QUERY_FOR_PROVEEDOR` AS
SELECT 
    t1.CODPROVEEDOR,
    t1.NOMBREPROVEEDOR,
    t1.TIPOPROVEEDOR_PORTAL,
    t2.TIPOTOT,
    t3.Pob_Comer AS POBCOMERCIALPROVEEDOR,
    t3.Marca AS MARCAPROVEEDOR_SISE,
    t3.tipo_proveedor AS TIPOPROVEEDOR_SISE
FROM `STG_PREVENCION_FRAUDES.DE_PROVEEDOR` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_TIPOTOT` t2 ON t1.IDTIPOTOT = t2.IDTIPOTOT
LEFT JOIN `STG_PREVENCION_FRAUDES.PRESTADORES_POB_COMER_TIPO` t3 ON t1.CODPROVEEDOR = t3.Id;

-- 33. Tabla de talleres con columnas adicionales
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.TAB_TALLERES` AS
SELECT 
    IDTALLER,
    IDOFICINA,
    CLAVETALLER,
    NOMBRECOMERCIAL,
    IDENTIDAD,
    TIPOCDR_PORTAL,
    CDRCOTIZADOR,
    CDRAUTOSURTIDO,
    IDESTADO,
    '' AS IDENTIDAD_ANTERIOR,
    '' AS CERCO_ANTERIOR
FROM `STG_PREVENCION_FRAUDES.DE_TALLERES`
ORDER BY CLAVETALLER;

-- 34. Estatus del expediente
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.ESTATUS_DEL_EXPEDIENTE` AS
SELECT 
    t1.IDEXPEDIENTE,
    t2.DESCRIPCION AS ESTATUSEXPEDIENTE
FROM `STG_PREVENCION_FRAUDES.DE_ESTATUS` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_ESTATUSEXPEDIENTES` t2 ON t1.IDESTATUSEXPEDIENTE = t2.IDESTATUSEXPEDIENTE;

-- 35. Datos del vehículo con marca
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.DATOS_DEL_VEH_CON_MARCA` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.TIPO AS TIPOVEHICULO,
    t1.MODELO,
    t1.SERIE,
    t2.DESCRIPCION AS MARCAVEHICULO
FROM `STG_PREVENCION_FRAUDES.DE_DATOSVEHICULO` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_MARCA` t2 ON t1.IDMARCA = t2.IDMARCA;

-- 36. Categoría del valuador
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.CATEGORIA_VALUADOR` AS
SELECT 
    t1.CODVALUADOR,
    t1.IDCATEGORIA,
    t1.EQUIPOPESADO,
    t2.NOMBRE AS CATEGORIAVALUADOR,
    CASE WHEN t1.EQUIPOPESADO = 1 THEN "EQUIPO PESADO" ELSE "AUTOS" END AS TIPOVALUADOR
FROM `STG_PREVENCION_FRAUDES.DE_VALUADOR` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_CATEGORIA` t2 ON t1.IDCATEGORIA = t2.IDCATEGORIA;

-- 37. Analista CDR
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.ANALISTA_CDR` AS
SELECT DISTINCT 
    t3.CLAVESUPERVISOR,
    t3.NOMBRESUPERVISOR AS ANALISTACDR,
    t2.CLAVETALLER,
    t3.IDREGIONGEOGRAFICA
FROM `STG_PREVENCION_FRAUDES.DE_DATOSGENERALES` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_RELACIONCDR_SICDR` t2 ON t1.CLAVETALLER = t2.CLAVETALLER
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_SUPERVISORINTEGRAL` t3 ON t2.IDSICDR = t3.IDSUPERVISORINTEGRAL
ORDER BY t3.CLAVESUPERVISOR;

-- 38. Concentrado 1
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.CONCENTRADO_1` AS
SELECT 
    t1.IDEXPEDIENTE,
    SUBSTR(t2.NUMEXPEDIENTE, 1, 14) AS NUMVALUACION,
    t1.MIN_of_FECHAAUTORIZACIONVALUADOR,
    t3.EJERCICIO,
    t3.NUMREPORTE,
    t3.NUMSINIESTRO,
    -- Limpieza de DESCRIPCION usando REGEXP_REPLACE
    REGEXP_REPLACE(t4.DESCRIPCION, r'[^a-zA-Z0-9\s]', '') AS ESTATUSVALUACION,
    t3.CLAVETALLER,
    SUBSTR(t5.NOMBRECOMERCIAL, 7) AS NOMBRECDR,
    t5.TIPOCDR_PORTAL,
    t5.CDRCOTIZADOR,
    t5.CDRAUTOSURTIDO,
    t5.CERCO_ANTERIOR,
    t3.CODVALUADOR,
    t6.FECVALUACION,
    t6.FECTERMINADO,
    t6.FECENTREGADO,
    t3.IDVALUACION,
    t5.IDTALLER,
    t5.IDENTIDAD,
    t5.IDOFICINA,
    t5.IDESTADO
FROM `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO` t1
LEFT JOIN `LAN_VERIFICACIONES.EXPEDIENTE` t2 ON t1.IDEXPEDIENTE = CAST(t2.IDEXPEDIENTE AS INT64)
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_DATOSGENERALES` t3 ON t1.IDEXPEDIENTE = t3.IDEXPEDIENTE
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_VALUACION` t4 ON t3.IDVALUACION = t4.IDVALUACION
LEFT JOIN `STG_PREVENCION_FRAUDES.TAB_TALLERES` t5 ON t3.CLAVETALLER = t5.CLAVETALLER
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_FECHAS` t6 ON t1.IDEXPEDIENTE = t6.IDEXPEDIENTE;

-- 39. Concentrado con estatus de expediente
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.CON_STATUS_EXP_CONCENTRADO_1` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.NUMVALUACION,
    t1.MIN_of_FECHAAUTORIZACIONVALUADOR,
    t1.EJERCICIO,
    t1.NUMREPORTE,
    t1.NUMSINIESTRO,
    t2.ESTATUSEXPEDIENTE,
    t1.ESTATUSVALUACION,
    t4.MARCAVEHICULO,
    t4.TIPOVEHICULO,
    t4.MODELO,
    t4.SERIE,
    t1.CLAVETALLER,
    t1.NOMBRECDR,
    t1.TIPOCDR_PORTAL,
    t3.NOMBRE AS CERCO,
    t1.CERCO_ANTERIOR,
    t1.CODVALUADOR,
    t1.FECVALUACION,
    t1.FECTERMINADO,
    t1.FECENTREGADO,
    t5.TIPOVALUADOR,
    t5.CATEGORIAVALUADOR,
    t1.IDVALUACION,
    t1.CDRCOTIZADOR,
    t1.CDRAUTOSURTIDO,
    t1.IDESTADO
FROM `STG_PREVENCION_FRAUDES.CONCENTRADO_1` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.ESTATUS_DEL_EXPEDIENTE` t2 ON t1.IDEXPEDIENTE = t2.IDEXPEDIENTE
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_CERCO` t3 ON t1.IDENTIDAD = t3.IDENTIDAD
LEFT JOIN `STG_PREVENCION_FRAUDES.DATOS_DEL_VEH_CON_MARCA` t4 ON t1.IDEXPEDIENTE = t4.IDEXPEDIENTE
LEFT JOIN `STG_PREVENCION_FRAUDES.CATEGORIA_VALUADOR` t5 ON t1.CODVALUADOR = t5.CODVALUADOR;

-- 40. Concentrado final
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.CONCENTRADO` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.NUMVALUACION,
    t1.MIN_of_FECHAAUTORIZACIONVALUADOR,
    t1.EJERCICIO,
    t1.NUMREPORTE,
    t1.NUMSINIESTRO,
    t1.ESTATUSEXPEDIENTE,
    t1.ESTATUSVALUACION,
    t1.MARCAVEHICULO,
    t1.TIPOVEHICULO,
    t1.MODELO,
    t1.SERIE,
    t1.CLAVETALLER,
    t1.NOMBRECDR,
    t3.tipo_proveedor AS TIPOCDR_SISE,
    t3.Marca AS MARCACDR_SISE,
    t1.TIPOCDR_PORTAL,
    t3.Pob_Comer AS POBCOMERCDR,
    t2.IDREGIONGEOGRAFICA,
    t1.CDRCOTIZADOR,
    t1.CDRAUTOSURTIDO,
    CASE
        WHEN t2.IDREGIONGEOGRAFICA IN (1,2,9,11) THEN 'NORTE'
        WHEN t2.IDREGIONGEOGRAFICA IN (4,5,7,10) THEN 'CENTRO'
        WHEN t2.IDREGIONGEOGRAFICA IN (3,6,8,12) THEN 'OCCIDENTE'
        ELSE 'SIN GERENCIA'
    END AS GERENCIAVALUACION,
    t1.CERCO,
    t1.CERCO_ANTERIOR,
    t1.CODVALUADOR,
    t1.FECVALUACION,
    t1.FECTERMINADO,
    t1.FECENTREGADO,
    CASE WHEN t1.FECTERMINADO IS NOT NULL THEN 1 ELSE 0 END AS VEHICULOTERMINADO,
    t1.TIPOVALUADOR,
    t1.CATEGORIAVALUADOR
FROM `STG_PREVENCION_FRAUDES.CON_STATUS_EXP_CONCENTRADO_1` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_ESTADO` t2 ON t1.IDESTADO = t2.IDESTADO
LEFT JOIN `STG_PREVENCION_FRAUDES.PRESTADORES_POB_COMER_TIPO` t3 ON t1.CLAVETALLER = t3.Id;

-- 41. Envío histórico con analista CDR
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.ENVIOHISTORICO_CN_ANALISTACDR` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.NUMVALUACION,
    t1.MIN_of_FECHAAUTORIZACIONVALUADOR,
    t1.EJERCICIO,
    t1.NUMREPORTE,
    t1.NUMSINIESTRO,
    t1.ESTATUSEXPEDIENTE,
    t1.ESTATUSVALUACION,
    t1.MARCAVEHICULO,
    t1.TIPOVEHICULO,
    t1.MODELO,
    t1.SERIE,
    t1.CLAVETALLER,
    t1.NOMBRECDR,
    t1.TIPOCDR_SISE,
    t1.MARCACDR_SISE,
    t1.TIPOCDR_PORTAL,
    t1.POBCOMERCDR,
    t1.IDREGIONGEOGRAFICA,
    t1.CDRCOTIZADOR,
    t1.CDRAUTOSURTIDO,
    t1.GERENCIAVALUACION,
    t1.CERCO,
    t1.CERCO_ANTERIOR,
    t1.CODVALUADOR,
    t1.FECVALUACION,
    t1.FECTERMINADO,
    t1.FECENTREGADO,
    t1.VEHICULOTERMINADO,
    t1.TIPOVALUADOR,
    t1.CATEGORIAVALUADOR,
    t2.ANALISTACDR
FROM `STG_PREVENCION_FRAUDES.CONCENTRADO` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.ANALISTA_CDR` t2 ON t1.CLAVETALLER = t2.CLAVETALLER;

-- 42. Query para envío histórico 0001
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO_0001` AS
SELECT 
    t2.IDEXPEDIENTE,
    t2.IDVALE,
    t2.CODPROVEEDOR,
    t4.NOMBREPROVEEDOR,
    t4.TIPOPROVEEDOR_PORTAL,
    t4.TIPOTOT,
    t4.POBCOMERCIALPROVEEDOR,
    t4.TIPOPROVEEDOR_SISE,
    t4.MARCAPROVEEDOR_SISE,
    t2.FOLIO,
    t2.FECHAEXPEDICION,
    t2.FECHAACTUALIZACION,
    t3.DESCRIPCION AS ESTATUSVALE,
    t2.AUTORIZADOR
FROM `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO` t1
INNER JOIN `STG_PREVENCION_FRAUDES.DE_VISTA_VALE` t2 ON t1.IDEXPEDIENTE = CAST(t2.IDEXPEDIENTE AS INT64)
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_VALEESTATUS` t3 ON t2.IDVALEESTATUS = t3.IDVALEESTATUS
LEFT JOIN `STG_PREVENCION_FRAUDES.QUERY_FOR_PROVEEDOR` t4 ON t2.CODPROVEEDOR = t4.CODPROVEEDOR;

-- 43. Query para envío histórico 1
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO1` AS
SELECT 
    t1.IDEXPEDIENTE,
    t2.IDVALEHISTORICO,
    t1.IDVALE,
    t1.CODPROVEEDOR,
    t1.NOMBREPROVEEDOR,
    t1.TIPOPROVEEDOR_PORTAL,
    t1.TIPOTOT,
    t1.POBCOMERCIALPROVEEDOR,
    t1.TIPOPROVEEDOR_SISE,
    t1.MARCAPROVEEDOR_SISE,
    t1.FOLIO,
    t2.NUMPARTE,
    t2.REFERENCIA,
    t2.DESCRIPCION AS DESCRIPCIONREFACCION,
    t2.MONTO,
    t2.IDCOSTO,
    t2.TIPO,
    t1.FECHAEXPEDICION,
    t2.FECENVIO,
    t2.FECENTREGAREFACCIONARIA,
    t2.FECRECEPCION,
    t2.FECSURTIDO AS FECPROMESAENTREGA,
    t1.FECHAACTUALIZACION,
    t2.USUARIO,
    t1.AUTORIZADOR,
    t1.ESTATUSVALE,
    t2.IDCAUSACAMBIOVALE,
    CASE
        WHEN t2.IDREFACCION = '01' THEN 'ORIGINAL'
        WHEN t2.IDREFACCION = '02' THEN 'ORIG. USADO'
        WHEN t2.IDREFACCION = '03' THEN 'ALTERNATIVO'
        WHEN t2.IDREFACCION = '04' THEN 'TOT'
        WHEN t2.IDREFACCION = '05' THEN 'NACIONAL'
        WHEN t2.IDREFACCION = '06' THEN 'DESMONTADO'
        WHEN t2.IDREFACCION = '07' THEN 'REMANUFACTURADO'
        WHEN t2.IDREFACCION IS NULL THEN 'SIN ORIGEN'
    END AS ORIGEN,
    t2.LLAVEPIEZA
FROM `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO_0001` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_VALEHISTORICO` t2 ON CAST(t1.IDVALE AS STRING) = t2.IDVALE
WHERE t2.IDCOSTO IS NOT NULL AND t1.FECHAEXPEDICION >= '2023-01-01 00:00:00';

-- 44. Vale con causa de cambio
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.VALE_CAUSA_CAMBIO` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.IDVALEHISTORICO,
    t1.IDVALE,
    t1.CODPROVEEDOR,
    t1.NOMBREPROVEEDOR,
    t1.TIPOPROVEEDOR_PORTAL,
    t1.TIPOTOT,
    t1.POBCOMERCIALPROVEEDOR,
    t1.TIPOPROVEEDOR_SISE,
    t1.MARCAPROVEEDOR_SISE,
    t1.FOLIO,
    t1.NUMPARTE,
    t1.REFERENCIA,
    t1.DESCRIPCIONREFACCION,
    t1.MONTO,
    t1.IDCOSTO,
    t1.TIPO,
    t1.FECHAEXPEDICION,
    t1.FECENVIO,
    t1.FECENTREGAREFACCIONARIA,
    t1.FECRECEPCION,
    t1.FECPROMESAENTREGA,
    t1.FECHAACTUALIZACION,
    t1.USUARIO,
    t1.AUTORIZADOR,
    t1.ESTATUSVALE,
    t1.ORIGEN,
    t2.DESCRIPCION AS CAUSACAMBIOVALE
FROM `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO1` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.DE_CAUSACAMBIOVALE` t2 ON t1.IDCAUSACAMBIOVALE = t2.IDCAUSACAMBIOVALE;

-- 45. Query para envío histórico con COSTO (TIPO = 'COSTO')
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO1_0003` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.IDVALEHISTORICO,
    t1.IDVALE,
    t1.CODPROVEEDOR,
    t1.NOMBREPROVEEDOR,
    t1.TIPOPROVEEDOR_PORTAL,
    t1.TIPOTOT,
    t1.POBCOMERCIALPROVEEDOR,
    t1.TIPOPROVEEDOR_SISE,
    t1.MARCAPROVEEDOR_SISE,
    t1.FOLIO,
    t1.NUMPARTE,
    t1.REFERENCIA,
    t1.DESCRIPCIONREFACCION,
    t1.MONTO,
    t1.IDCOSTO,
    t1.TIPO,
    t1.FECHAEXPEDICION,
    t1.FECENVIO,
    t1.FECENTREGAREFACCIONARIA,
    t1.FECRECEPCION,
    t1.FECPROMESAENTREGA,
    t1.FECHAACTUALIZACION,
    t1.USUARIO,
    t1.AUTORIZADOR,
    t1.ESTATUSVALE,
    t1.ORIGEN,
    t1.CAUSACAMBIOVALE,
    t2.LISTA,
    t2.BLINDAJE,
    t2.CLAVENAGS,
    t2.MONTOCONVENIO
FROM `STG_PREVENCION_FRAUDES.VALE_CAUSA_CAMBIO` t1
INNER JOIN `STG_PREVENCION_FRAUDES.DE_COSTO` t2 ON CAST(t1.IDCOSTO AS STRING) = CAST(t2.IDCOSTO AS STRING) AND t1.TIPO = 'COSTO';

-- 46. Query para envío histórico con COMPLEMENTO (TIPO = 'COMPLEMENTO')
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO1_0004` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.IDVALEHISTORICO,
    t1.IDVALE,
    t1.CODPROVEEDOR,
    t1.NOMBREPROVEEDOR,
    t1.TIPOPROVEEDOR_PORTAL,
    t1.TIPOTOT,
    t1.POBCOMERCIALPROVEEDOR,
    t1.TIPOPROVEEDOR_SISE,
    t1.MARCAPROVEEDOR_SISE,
    t1.FOLIO,
    t1.NUMPARTE,
    t1.REFERENCIA,
    t1.DESCRIPCIONREFACCION,
    t1.MONTO,
    t1.IDCOSTO,
    t1.TIPO,
    t1.FECHAEXPEDICION,
    t1.FECENVIO,
    t1.FECENTREGAREFACCIONARIA,
    t1.FECRECEPCION,
    t1.FECPROMESAENTREGA,
    t1.FECHAACTUALIZACION,
    t1.USUARIO,
    t1.AUTORIZADOR,
    t1.ESTATUSVALE,
    t1.ORIGEN,
    t1.CAUSACAMBIOVALE,
    t2.LISTA,
    t2.BLINDAJE,
    t2.CLAVENAGS,
    t2.MONTOCONVENIO
FROM `STG_PREVENCION_FRAUDES.VALE_CAUSA_CAMBIO` t1
INNER JOIN `STG_PREVENCION_FRAUDES.DE_COMPLEMENTO` t2 ON t1.IDCOSTO = t2.IDCOMPLEMENTO AND t1.TIPO = 'COMPLEMENTO';

-- 47. Unión de costo y complemento
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.APPEND_TABLE` AS
SELECT * FROM `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO1_0003`
UNION ALL
SELECT * FROM `STG_PREVENCION_FRAUDES.QUERY_FOR_ENVIOHISTORICO1_0004`;

-- 48. Fechas de expedición y entrega con tiempo de entrega
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.FECEXP_FECENTREGA_TE` AS
SELECT DISTINCT 
    IDEXPEDIENTE,
    CODPROVEEDOR,
    CONCAT(IFNULL(NUMPARTE,''), IFNULL(REFERENCIA,''), IFNULL(DESCRIPCIONREFACCION,'')) AS LLAVEPIEZA,
    MIN(FECHAEXPEDICION) AS MIN_of_FECHAEXPEDICION,
    MAX(FECENTREGAREFACCIONARIA) AS MAX_of_FECENTREGAREFACCIONARIA,
    NUMPARTE,
    REFERENCIA,
    DESCRIPCIONREFACCION
FROM `STG_PREVENCION_FRAUDES.APPEND_TABLE`
GROUP BY IDEXPEDIENTE, CODPROVEEDOR, LLAVEPIEZA, NUMPARTE, REFERENCIA, DESCRIPCIONREFACCION;

-- 49. Cálculo de tiempo de entrega
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.TE` AS
SELECT 
    IDEXPEDIENTE,
    CODPROVEEDOR,
    LLAVEPIEZA,
    -- Cálculo de días hábiles entre fechas (equivalente a INTCK('DTWEEKDAY1W'))
    DATE_DIFF(DATE(MAX_of_FECENTREGAREFACCIONARIA), DATE(MIN_of_FECHAEXPEDICION), DAY) AS TIEMPOENTREGA,
    NUMPARTE,
    REFERENCIA,
    DESCRIPCIONREFACCION
FROM `STG_PREVENCION_FRAUDES.FECEXP_FECENTREGA_TE`;

-- 50. Tabla final con tiempo de entrega
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.APPEND_TABLE_TE` AS
SELECT 
    t1.IDEXPEDIENTE,
    t1.IDVALEHISTORICO,
    t1.IDVALE,
    t1.CODPROVEEDOR,
    t1.NOMBREPROVEEDOR,
    t1.TIPOPROVEEDOR_PORTAL,
    t1.TIPOTOT,
    t1.POBCOMERCIALPROVEEDOR,
    t1.TIPOPROVEEDOR_SISE,
    t1.MARCAPROVEEDOR_SISE,
    t1.FOLIO,
    t1.NUMPARTE,
    t1.REFERENCIA,
    t1.DESCRIPCIONREFACCION,
    t1.MONTO,
    t1.IDCOSTO,
    t1.TIPO,
    t1.FECHAEXPEDICION,
    t1.FECENVIO,
    t1.FECENTREGAREFACCIONARIA,
    t1.FECRECEPCION,
    t1.FECPROMESAENTREGA,
    t1.FECHAACTUALIZACION,
    t1.USUARIO,
    t1.AUTORIZADOR,
    t1.ESTATUSVALE,
    t1.ORIGEN,
    t1.CAUSACAMBIOVALE,
    t1.LISTA,
    t1.BLINDAJE,
    t1.CLAVENAGS,
    t1.MONTOCONVENIO,
    t2.TIEMPOENTREGA,
    DATE_DIFF(DATE(t1.FECENTREGAREFACCIONARIA), DATE(t1.FECHAEXPEDICION), DAY) AS TIEMPOENTREGA1,
    DATE_DIFF(DATE(t1.FECRECEPCION), DATE(t1.FECHAEXPEDICION), DAY) AS TIEMPORECEPCION
FROM `STG_PREVENCION_FRAUDES.APPEND_TABLE` t1
LEFT JOIN `STG_PREVENCION_FRAUDES.TE` t2 ON 
    t1.IDEXPEDIENTE = t2.IDEXPEDIENTE 
    AND t1.CODPROVEEDOR = t2.CODPROVEEDOR 
    AND t1.NUMPARTE = t2.NUMPARTE 
    AND t1.REFERENCIA = t2.REFERENCIA 
    AND t1.DESCRIPCIONREFACCION = t2.DESCRIPCIONREFACCION;

-- 51. Unión final con datos de expediente
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.UNION_01` AS
SELECT 
    a.*,
    b.NUMVALUACION,
    b.MIN_of_FECHAAUTORIZACIONVALUADOR,
    b.EJERCICIO,
    b.NUMREPORTE,
    b.NUMSINIESTRO,
    b.ESTATUSEXPEDIENTE,
    b.ESTATUSVALUACION,
    b.MARCAVEHICULO,
    b.TIPOVEHICULO,
    b.MODELO,
    b.SERIE,
    b.CLAVETALLER,
    b.NOMBRECDR,
    b.TIPOCDR_SISE,
    b.MARCACDR_SISE,
    b.TIPOCDR_PORTAL,
    b.POBCOMERCDR,
    b.IDREGIONGEOGRAFICA,
    b.CDRCOTIZADOR,
    b.CDRAUTOSURTIDO,
    b.GERENCIAVALUACION,
    b.CERCO,
    b.CERCO_ANTERIOR,
    b.CODVALUADOR,
    b.FECVALUACION,
    b.FECTERMINADO,
    b.FECENTREGADO,
    b.VEHICULOTERMINADO,
    b.TIPOVALUADOR,
    b.CATEGORIAVALUADOR,
    b.ANALISTACDR
FROM `STG_PREVENCION_FRAUDES.APPEND_TABLE_TE` a
LEFT JOIN `STG_PREVENCION_FRAUDES.ENVIOHISTORICO_CN_ANALISTACDR` b ON a.IDEXPEDIENTE = b.IDEXPEDIENTE;

-- 52. Query para TLP con columnas calculadas
CREATE OR REPLACE TABLE `STG_PREVENCION_FRAUDES.QUERY_FOR_TLP` AS
SELECT 
    *,
    -- PIEZAENTREGADA
    CASE WHEN FECENTREGAREFACCIONARIA IS NOT NULL THEN 1 ELSE 0 END AS PIEZAENTREGADA,
    -- MESEXPEDICION
    EXTRACT(MONTH FROM FECHAEXPEDICION) AS MESEXPEDICION,
    -- ANIO_EXPEDICION
    EXTRACT(YEAR FROM FECHAEXPEDICION) AS ANIO_EXPEDICION,
    -- LLAVEPIEZA
    CONCAT(CAST(IDEXPEDIENTE AS STRING), TRIM(IFNULL(REFERENCIA,'')), TRIM(IFNULL(NUMPARTE,'')), TRIM(IFNULL(DESCRIPCIONREFACCION,''))) AS LLAVEPIEZA_FINAL,
    -- TIPOASIGNACION1
    CASE
        WHEN USUARIO = 'AUT' THEN 'AUTOMATICO'
        WHEN USUARIO LIKE '%AUT /%' THEN 'MANUAL CON ALERTA'
        WHEN UPPER(USUARIO) LIKE '%ADMINREFC%' OR USUARIO LIKE '%KAGONZALEZ%' OR USUARIO LIKE '%PERUIZ%' OR USUARIO LIKE '%PRUIZ%' OR USUARIO LIKE '%KGONZALEZ%' OR UPPER(USUARIO) LIKE 'ASR_COMP%' OR UPPER(USUARIO) LIKE '%EDSANCHEZ%' OR UPPER(USUARIO) LIKE '%JOVAZQUEZ%' OR UPPER(USUARIO) IN ('CORCOMSEG1','CORCOMSEG10','CORCOMSEG11','CORCOMSEG13','CORCOMSEG15','CORCOMSEG30','CORCOMSEG31','CORCOMSEG32','CORCOMSEG33','CORCOMSEG34','CORCOMSEG42','CORCOMSEG45','CORCOMSEG160','CORCOMSEG2','CORCOMSEG3','CORCOMSEG4','CORCOMSEG5','CORCOMSEG6','CORCOMSEG7','CORCOMSEG8','CORCOMSEG9','CORCOMSEG12','CORCOMSEG14','CORCOMSEG16','CORCOMSEG17','CORCOMSEG18','CORCOMSEG19','CORCOMSEG20','CORCOMSEG21','CORCOMSEG22','CORCOMSEG23','CORCOMSEG24','CORCOMSEG25','CORCOMSEG26','CORCOMSEG27','CORCOMSEG28','CORCOMSEG29','CORCOMSEG35','CORCOMSEG36','CORCOMSEG37','CORCOMSEG38','CORCOMSEG39','CORCOMSEG40','CORCOMSEG114','CORCOMSEG43','CORCOMSEG150','CORCOMSEG151','EDSANCHEZ','CORCOMSEG46') THEN 'MANUAL COMPRAS'
        WHEN UPPER(USUARIO) LIKE 'ASR%' OR UPPER(USUARIO) LIKE '%SUPSEG%' OR UPPER(USUARIO) LIKE 'SV_____%' OR UPPER(USUARIO) LIKE '%OTOLEDO%' OR (UPPER(USUARIO) LIKE 'CORCOMSEG%' AND UPPER(USUARIO) NOT IN ('CORCOMSEG10','CORCOMSEG11','CORCOMSEG13','CORCOMSEG15','CORCOMSEG30','CORCOMSEG31','CORCOMSEG32','CORCOMSEG33','CORCOMSEG34','CORCOMSEG42','CORCOMSEG45','CORCOMSEG160','CORCOMSEG2','CORCOMSEG3','CORCOMSEG4','CORCOMSEG5','CORCOMSEG6','CORCOMSEG7','CORCOMSEG8','CORCOMSEG9','CORCOMSEG12','CORCOMSEG14','CORCOMSEG16','CORCOMSEG17','CORCOMSEG18','CORCOMSEG19','CORCOMSEG20','CORCOMSEG21','CORCOMSEG22','CORCOMSEG23','CORCOMSEG24','CORCOMSEG25','CORCOMSEG26','CORCOMSEG27','CORCOMSEG28','CORCOMSEG29','CORCOMSEG35','CORCOMSEG36','CORCOMSEG37','CORCOMSEG38','CORCOMSEG39','CORCOMSEG40','CORCOMSEG114','CORCOMSEG43','CORCOMSEG150','CORCOMSEG151','EDSANCHEZ','CORCOMSEG46')) THEN 'MANUAL SEGUIMIENTO'
        WHEN REGEXP_CONTAINS(TRIM(USUARIO), r'^\d{5}) THEN 'DIRECTA'
        WHEN USUARIO LIKE '%Valuador%' OR USUARIO IS NULL THEN
            CASE WHEN CODPROVEEDOR = '81111' THEN 'DIRECTA 81111' ELSE 'DIRECTA' END
        ELSE 'SIN ASIGNACION'
    END AS TIPOASIGNACION1,
    -- AREAASIGNACION
    CASE 
        WHEN USUARIO = 'AUT' THEN 'COTIZADOR'
        WHEN UPPER(USUARIO) LIKE '%ADMINREFC%' OR USUARIO LIKE '%KAGONZALEZ%' OR USUARIO LIKE '%PERUIZ%' OR USUARIO LIKE '%PRUIZ%' OR USUARIO LIKE '%KGONZALEZ%' OR UPPER(USUARIO) LIKE 'ASR_COMP%' OR UPPER(USUARIO) LIKE '%EDSANCHEZ%' OR UPPER(USUARIO) LIKE '%JOVAZQUEZ%' OR UPPER(USUARIO) IN ('CORCOMSEG1','CORCOMSEG10','CORCOMSEG11','CORCOMSEG13','CORCOMSEG15','CORCOMSEG30','CORCOMSEG31','CORCOMSEG32','CORCOMSEG33','CORCOMSEG34','CORCOMSEG42','CORCOMSEG45','CORCOMSEG160','CORCOMSEG2','CORCOMSEG3','CORCOMSEG4','CORCOMSEG5','CORCOMSEG6','CORCOMSEG7','CORCOMSEG8','CORCOMSEG9','CORCOMSEG12','CORCOMSEG14','CORCOMSEG16','CORCOMSEG17','CORCOMSEG18','CORCOMSEG19','CORCOMSEG20','CORCOMSEG21','CORCOMSEG22','CORCOMSEG23','CORCOMSEG24','CORCOMSEG25','CORCOMSEG26','CORCOMSEG27','CORCOMSEG28','CORCOMSEG29','CORCOMSEG35','CORCOMSEG36','CORCOMSEG37','CORCOMSEG38','CORCOMSEG39','CORCOMSEG40','CORCOMSEG114','CORCOMSEG43','CORCOMSEG150','CORCOMSEG151','EDSANCHEZ','CORCOMSEG46') THEN 'COMPRAS'
        WHEN UPPER(USUARIO) LIKE 'ASR%' OR UPPER(USUARIO) LIKE '%SUPSEG%' OR UPPER(USUARIO) LIKE 'SV_____%' OR UPPER(USUARIO) LIKE '%OTOLEDO%' OR (UPPER(USUARIO) LIKE 'CORCOMSEG%' AND UPPER(USUARIO) NOT IN ('CORCOMSEG10','CORCOMSEG11','CORCOMSEG13','CORCOMSEG15','CORCOMSEG30','CORCOMSEG31','CORCOMSEG32','CORCOMSEG33','CORCOMSEG34','CORCOMSEG42','CORCOMSEG45','CORCOMSEG160','CORCOMSEG2','CORCOMSEG3','CORCOMSEG4','CORCOMSEG5','CORCOMSEG6','CORCOMSEG7','CORCOMSEG8','CORCOMSEG9','CORCOMSEG12','CORCOMSEG14','CORCOMSEG16','CORCOMSEG17','CORCOMSEG18','CORCOMSEG19','CORCOMSEG20','CORCOMSEG21','CORCOMSEG22','CORCOMSEG23','CORCOMSEG24','CORCOMSEG25','CORCOMSEG26','CORCOMSEG27','CORCOMSEG28','CORCOMSEG29','CORCOMSEG35','CORCOMSEG36','CORCOMSEG37','CORCOMSEG38','CORCOMSEG39','CORCOMSEG40','CORCOMSEG114','CORCOMSEG43','CORCOMSEG150','CORCOMSEG151','EDSANCHEZ','CORCOMSEG46')) THEN 'SEGUIMIENTO'
        WHEN USUARIO LIKE '%Valuador%' OR REGEXP_CONTAINS(TRIM(USUARIO), r'^\d{5}) OR USUARIO IS NULL THEN 'VALUACIÓN'
        ELSE ''
    END AS AREAASIGNACION,
    -- Indicadores binarios
    CASE WHEN USUARIO = 'AUT' THEN 1 ELSE 0 END AS AUTOMATICO,
    CASE WHEN USUARIO LIKE '%AUT /%' THEN 1 ELSE 0 END AS MANUAL_CON_ALERTA,
    CASE WHEN UPPER(USUARIO) LIKE '%ADMINREFC%' OR USUARIO LIKE '%KAGONZALEZ%' OR USUARIO LIKE '%PERUIZ%' OR USUARIO LIKE '%PRUIZ%' OR USUARIO LIKE '%KGONZALEZ%' OR UPPER(USUARIO) LIKE 'ASR_COMP%' OR UPPER(USUARIO) IN ('CORCOMSEG1','CORCOMSEG10','CORCOMSEG11','CORCOMSEG13','CORCOMSEG15','CORCOMSEG30','CORCOMSEG31','CORCOMSEG32','CORCOMSEG33','CORCOMSEG34','CORCOMSEG42','CORCOMSEG45','CORCOMSEG160','CORCOMSEG2','CORCOMSEG3','CORCOMSEG4','CORCOMSEG5','CORCOMSEG6','CORCOMSEG7','CORCOMSEG8','CORCOMSEG9','CORCOMSEG12','CORCOMSEG14','CORCOMSEG16','CORCOMSEG17','CORCOMSEG18','CORCOMSEG19','CORCOMSEG20','CORCOMSEG21','CORCOMSEG22','CORCOMSEG23','CORCOMSEG24','CORCOMSEG25','CORCOMSEG26','CORCOMSEG27','CORCOMSEG28','CORCOMSEG29','CORCOMSEG35','CORCOMSEG36','CORCOMSEG37','CORCOMSEG38','CORCOMSEG39','CORCOMSEG40','CORCOMSEG114','CORCOMSEG43','CORCOMSEG150','CORCOMSEG151','EDSANCHEZ','CORCOMSEG46') THEN 1 ELSE 0 END AS MANUAL_COMPRAS,
    CASE WHEN (UPPER(USUARIO) LIKE 'ASR%' AND NOT UPPER(USUARIO) LIKE 'ASR_COMP%') OR UPPER(USUARIO) LIKE '%SUPSEG%' OR UPPER(USUARIO) LIKE 'SV_____%' OR UPPER(USUARIO) LIKE '%OTOLEDO%' OR (UPPER(USUARIO) LIKE 'CORCOMSEG%' AND UPPER(USUARIO) NOT IN ('CORCOMSEG10','CORCOMSEG11','CORCOMSEG13','CORCOMSEG15','CORCOMSEG30','CORCOMSEG31','CORCOMSEG32','CORCOMSEG33','CORCOMSEG34','CORCOMSEG42','CORCOMSEG45','CORCOMSEG160','CORCOMSEG2','CORCOMSEG3','CORCOMSEG4','CORCOMSEG5','CORCOMSEG6','CORCOMSEG7','CORCOMSEG8','CORCOMSEG9','CORCOMSEG12','CORCOMSEG14','CORCOMSEG16','CORCOMSEG17','CORCOMSEG18','CORCOMSEG19','CORCOMSEG20','CORCOMSEG21','CORCOMSEG22','CORCOMSEG23','CORCOMSEG24','CORCOMSEG25','CORCOMSEG26','CORCOMSEG27','CORCOMSEG28','CORCOMSEG29','CORCOMSEG35','CORCOMSEG36','CORCOMSEG37','CORCOMSEG38','CORCOMSEG39','CORCOMSEG40','CORCOMSEG114','CORCOMSEG43','CORCOMSEG150','CORCOMSEG151','EDSANCHEZ','CORCOMSEG46')) THEN 1 ELSE 0 END AS MANUAL_SEGUIMIENTO,
    CASE WHEN UPPER(USUARIO) LIKE '%VALUADOR%' OR USUARIO IS NULL OR REGEXP_CONTAINS(TRIM(USUARIO), r'^\d{5}) THEN 1 ELSE 0 END AS DIRECTA,
    CASE WHEN CODPROVEEDOR = CLAVETALLER THEN 1 ELSE 0 END AS PIEZAAUTOSURTIDO
FROM `STG_PREVENCION_FRAUDES.UNION_01`;

-- ======================================================================
-- TABLA FINAL: TODASLASPIEZAS
-- ======================================================================

-- 53. Creación de la tabla final TODASLASPIEZAS en DM_PREVENCION_FRAUDES
-- Nota: Como no tenemos la tabla USUARIOHOMOLOGADO, se implementa la lógica en CASE
CREATE OR REPLACE TABLE `DM_PREVENCION_FRAUDES.TODASLASPIEZAS` AS
SELECT 
    IDEXPEDIENTE,
    EJERCICIO,
    NUMREPORTE,
    NUMSINIESTRO,
    ESTATUSEXPEDIENTE,
    ESTATUSVALUACION,
    MARCAVEHICULO,
    TIPOVEHICULO,
    MODELO,
    SERIE,
    CLAVETALLER,
    NOMBRECDR,
    TIPOCDR_PORTAL,
    IDREGIONGEOGRAFICA,
    CDRCOTIZADOR,
    CDRAUTOSURTIDO,
    ANALISTACDR,
    GERENCIAVALUACION,
    CERCO,
    CERCO_ANTERIOR,
    CODVALUADOR,
    FECVALUACION,
    FECTERMINADO,
    FECENTREGADO,
    VEHICULOTERMINADO,
    IDVALEHISTORICO,
    IDVALE,
    CODPROVEEDOR,
    NOMBREPROVEEDOR,
    TIPOPROVEEDOR_PORTAL,
    TIPOTOT,
    FOLIO,
    FECHAEXPEDICION,
    FECHAACTUALIZACION,
    ESTATUSVALE,
    USUARIO,
    -- USUARIOHOMOLOGADO - Implementación de la lógica del CASE original
    CASE 
        WHEN USUARIO IS NULL OR USUARIO LIKE '%Valuador%' THEN SUBSTR(USUARIO, 10, 5)
        WHEN USUARIO = 'AUT' THEN "AUTOMATICO"
        WHEN USUARIO LIKE '%AUT / ADMINREFC%' THEN SUBSTR(USUARIO, 1, 17)
        WHEN USUARIO LIKE '%AUT / Adminrefc%' THEN SUBSTR(USUARIO, 1, 17)
        WHEN USUARIO LIKE '%AUT / adminep%' THEN SUBSTR(USUARIO, 1, 17)
        WHEN USUARIO LIKE '%ADMINEP08%' THEN "EDUARDO LOPEZ"
        WHEN USUARIO LIKE '%AUT / adminrefc18%' THEN "AUT/NADIA YADIRA RAMIREZ"
        WHEN USUARIO LIKE '%AUT / adminrefc23%' THEN "AUT/ULISES PEREZ"
        WHEN USUARIO = 'AUT / ASR4' THEN "AUT/ARGENIS URIEL REYES ADAME"
        WHEN USUARIO = 'AUT / ASR3_14' THEN "AUT/ADRIANA NAVARRO"
        WHEN USUARIO = 'AUT / ASR9_2' THEN "AUT/MARTINEZ CORANADO BLANCA"
        WHEN USUARIO = 'AUT / ASR5' THEN "AUT/OSCAR OMAR HERRERA BECERRIL"
        WHEN USUARIO = 'AUT / ASR3_6' THEN "AUT/FELIX ESCOBAR"
        WHEN USUARIO LIKE '%supsegq%' THEN USUARIO
        WHEN USUARIO LIKE '%AUT / ASR%' THEN SUBSTR(USUARIO, 1, 17)
        WHEN USUARIO LIKE '%AUT / ASR_COMP%' THEN SUBSTR(USUARIO, 1, 17)
        WHEN USUARIO LIKE '%AUT / asr_comp%' THEN SUBSTR(USUARIO, 1, 17)
        ELSE " "
    END AS USUARIOHOMOLOGADO,
    CAUSACAMBIOVALE,
    AUTORIZADOR,
    NUMPARTE,
    REFERENCIA,
    DESCRIPCIONREFACCION,
    LISTA,
    CLAVENAGS,
    BLINDAJE,
    MONTO,
    ORIGEN,
    IDCOSTO,
    TIPO AS TIPOCOSTO,
    FECENVIO,
    FECENTREGAREFACCIONARIA,
    FECRECEPCION,
    FECPROMESAENTREGA,
    PIEZAENTREGADA,
    TIEMPOENTREGA,
    TIEMPORECEPCION,
    ANIO_EXPEDICION,
    MESEXPEDICION,
    LLAVEPIEZA_FINAL AS LLAVEPIEZA,
    TIPOASIGNACION1,
    AUTOMATICO,
    MANUAL_CON_ALERTA AS MANUAL_CON_ALERTA,
    MANUAL_COMPRAS AS MANUAL_COMPRAS,
    MANUAL_SEGUIMIENTO AS MANUAL_SEGUIMIENTO,
    DIRECTA,
    AREAASIGNACION,
    PIEZAAUTOSURTIDO,
    MONTOCONVENIO
FROM `STG_PREVENCION_FRAUDES.QUERY_FOR_TLP`
WHERE FECVALUACION >= '2024-01-01 00:00:00';

-- ======================================================================
-- FIN DEL PROCESO
-- ======================================================================

-- LIMPIEZA DE TABLAS TEMPORALES (OPCIONAL)
-- Si deseas limpiar las tablas intermedias después del proceso, puedes ejecutar:
/*
DROP TABLE IF EXISTS `STG_PREVENCION_FRAUDES.DE_CAUSACAMBIOVALE`;
DROP TABLE IF EXISTS `STG_PREVENCION_FRAUDES.DE_COSTO`;
-- ... (resto de tablas intermedias)
*/